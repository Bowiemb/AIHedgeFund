name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy

      - name: Run ruff
        run: ruff check apps/ packages/

      - name: Run black
        run: black --check apps/ packages/

      - name: Run mypy
        run: mypy apps/ packages/ --ignore-missing-imports
        continue-on-error: true

  test:
    name: Test Python
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: aihedge
          POSTGRES_PASSWORD: aihedge123
          POSTGRES_DB: aihedge_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgresql+asyncpg://aihedge:aihedge123@localhost:5432/aihedge_test
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest tests/ -v --cov=apps --cov=packages --cov-report=xml
        continue-on-error: true

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
        continue-on-error: true

  build-api:
    name: Build API Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/docker/Dockerfile.api
          push: false
          tags: aihedgefund-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-workers:
    name: Build Workers Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Workers image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/docker/Dockerfile.workers
          push: false
          tags: aihedgefund-workers:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
