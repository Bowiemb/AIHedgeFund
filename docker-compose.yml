version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: aihedge-db
    environment:
      POSTGRES_USER: aihedge
      POSTGRES_PASSWORD: aihedge123
      POSTGRES_DB: aihedge
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aihedge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: aihedge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: aihedge-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.api
    container_name: aihedge-api
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://aihedge:aihedge123@db:5432/aihedge
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: uvicorn apps.api.main:app --host 0.0.0.0 --port 8000 --reload

  # Background Workers
  workers:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.workers
    container_name: aihedge-workers
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://aihedge:aihedge123@db:5432/aihedge
      - REDIS_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
    volumes:
      - ./apps/workers:/app/apps/workers
      - ./packages:/app/packages
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: python -m rq worker --url redis://redis:6379/0 --with-scheduler

  # Next.js Web Frontend
  web:
    build:
      context: ./apps/web
      dockerfile: ../../infra/docker/Dockerfile.web
    container_name: aihedge-web
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXTAUTH_URL=http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    command: npm run dev

  # Adminer (Database UI)
  adminer:
    image: adminer:latest
    container_name: aihedge-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: aihedge-network
